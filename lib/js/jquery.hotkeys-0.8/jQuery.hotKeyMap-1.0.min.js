//
// jQuery MapHotKeys Plugin
//
// Created by Michael Kennedy
// http://blog.michaelckennedy.net/about/
// Copyright 2012
//
// Built upon the hotkeys plugin by John Resig (https://github.com/jeresig/jquery.hotkeys)
// Be sure to include jquery.hotkeys.js first!
//

if (!jQuery) { console.log("ERROR: You must include jQuery before you include jQuery.mapHotKeys.") } if (!jQuery.hotkeys && console) { console.log("ERROR: You must include jQuery.hotkeys before you include jQuery.mapHotKeys.") } (function ($) { $.fn.mapHotKeys = function (data) { var source$ = $(this); $(data).each(function (index, item) { var key = item.key; var action = item.action; var namespace = item.namespace ||  "";if (namespace) namespace = "." + namespace;source$.bind('keydown' + namespacesource, key, function (e) { action(item); if (item.isSequence !== true) { $(".pending_key").remove() } e.preventDefault(); return false }) }); return $(this) }; $.mapHotKeys = {}; var clearActionKeyOnMismatch = function (key1, key2, source) { $(source).bind('keypress', null, function (e) { if (e.which != key2) { $(".pending_key").remove() } return true }) }; var setDefferedKeyAction = function (key1, key2, source, act) { var id = "__mapHotKeys__pending_key__" + key1 + "_" + key2; clearActionKeyOnMismatch(key1, key2, source); var defferedHolder = $("#" + id); if (defferedHolder.length === 0) { defferedHolder = $("<div class='pending_key' style='display: none' id='" + id + "'><div>"); $("body").append(defferedHolder) } defferedHolder.data("key", key1); $(source).mapHotKeys([{ key: key2, action: function (item) { var nextDefferedHolder = $("#" + id); var lastKey = nextDefferedHolder.data("key"); nextDefferedHolder.data("key", ""); if (lastKey === key1) { act(item); $(".pending_key").remove() } } }]) }; $.mapHotKeys.createSequence = function (key1, key2, source, actionMethod) { var pair = { key: key1, isSequence: true, action: function (item) { setDefferedKeyAction(key1, key2, source, actionMethod) } }; return pair } })(jQuery);